//TODO: Antialiasing
//FIXME: Collisons
// Менеджер X - он владеет ресурсами X, а всем раздает только указатели.
// Правило 3 - если кто то переопределен из A(A&), ~A, op=(A&), то должны быть переопределены остальные.
// Правило 0 - никого не переопределять.
// Читай дизайн и эволюцию.
// Лучше =default, когда надо.
// Скот Мейерс Эффективный С++. (-Weffc++)

// Annotated design C++

// Два класса. Array (аналог std::array); operator[], 
//             Vector 
//             Test class instead of int.


// Для new можно переопределить агрументы. Можно в макрос. И хранить отладочную  информацию.

// Placement syntax new. Хотим создать объект в буфере но не сразу. Класс дин. массив. Заказ памяти с запасом. Не вызывать конструкторы с запасом.
// Создаем char* нужного размера.  

// void* new(size_t, void* mem)
//  {
//      return mem;
//  }

// Для какого из классов переопределить new.
// Переопр глобальный new и delete ([]). 
// Каноническое поведение + printf. Создание одинчого эл-та для обхяека с/без переопр. +-деструктор у объекта. Иссл...

// Diifer operator new & new expression. Also with delete

// Функция new_hadler -> вызывается если не смог malloc в new. Замена с set_new_hadler
// before 03 return null  since 03 throw BAD_ALLOC
// Аналог старого new: new (std::nothrow) A  ...
